!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var n,r;return n=t,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:n,about:r})}).then((function(e){return t._checkResponse(e)}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:n,link:r})}).then((function(e){return t._checkResponse(e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return t._checkResponse(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"setUserAvatar",value:function(e){var t=this,n=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:n})}).then((function(e){return t._checkResponse(e)}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._button=this._formElement.querySelector(this._submitButtonSelector)}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0):(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))})),this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.data,o=t.handleCardClick,i=t.handleDeleteClick,a=t.handleAddLike,u=t.handleRemoveLike,s=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r.name,this._link=r.link,this._id=r._id,this._ownerId=r.owner._id,this._userId=s,this._likes=r.likes,this._template=n,this._handleCardClick=o,this._handleDeleteClick=i,this._handleAddLike=a,this._handleRemoveLike=u,this._element=this._getTemplate(),this._image=this._element.querySelector(".card__image"),this._likesCounter=this._element.querySelector(".card__likes-counter"),this._likeButton=this._element.querySelector(".card__heart-icon")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".card").cloneNode(!0)}},{key:"_isImageLiked",value:function(){var e=this;this._likes.some((function(t){return t._id===e._userId}))?this._likeButton.classList.add("card__heart-icon_active"):this._likeButton.classList.remove("card__heart-icon_active")}},{key:"_likeCount",value:function(){this._likesCounter.textContent=this._likes.length}},{key:"_activeLike",value:function(){this._likeButton.classList.add("card__heart-icon_active"),this._likesCounter.textContent=this._likes.length+1}},{key:"_inactiveLike",value:function(){this._likeButton.classList.remove("card__heart-icon_active"),this._likesCounter.textContent=this._likes.length-1}},{key:"updateLikes",value:function(e){this._likes=e}},{key:"showDeleteButton",value:function(){this._ownerId!==this._userId&&this._element.querySelector(".card__delete").remove()}},{key:"deleteImage",value:function(){this._element.querySelector(".card__delete").closest(".card").remove()}},{key:"generateCard",value:function(){return this._setEventListeners(),this._element.querySelector(".card__title").textContent=this._name,this._image.src=this._link,this._image.alt=this._name,this.showDeleteButton(),this._likeCount(),this._isImageLiked(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likes.some((function(t){return t._id===e._userId}))?(e._handleRemoveLike(e),e._inactiveLike(e)):(e._handleAddLike(e),e._activeLike(e))})),this._element.querySelector(".card__delete").addEventListener("click",(function(){return e._handleDeleteClick(e)})),this._image.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addNewItem",value:function(e){this._container.prepend(e)}},{key:"addItem",value:function(e){this._container.append(e)}}])&&a(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&s(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popupElement.querySelector(".popup__image"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._image.src=n,this._image.alt=t,this._popupElement.querySelector(".popup__caption").textContent=t,p(d(a.prototype),"open",this).call(this)}}])&&f(t.prototype,n),a}(c);function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function S(e){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=r,t._form=t._popupElement.querySelector(".popup__form-main"),t._submitButton=t._popupElement.querySelector(".popup__submit-button"),t._buttonText=t._popupElement.querySelector(".popup__submit-button").textContent,t._inputList=t._popupElement.querySelectorAll(".popup__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"close",value:function(){b(S(a.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Saving...":this._buttonText}},{key:"setEventListeners",value:function(){var e=this;b(S(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit(e._getInputValues())}))}}])&&v(t.prototype,n),a}(c);function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&O(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=r,t._confirmDeleteButton=t._popupElement.querySelector(".popup__submit-button_type_delete"),t._buttonText=t._popupElement.querySelector(".popup__submit-button").textContent,t}return t=a,(n=[{key:"setSubmitAction",value:function(e){this._handleFormSubmit=e}},{key:"renderLoading",value:function(e){this._confirmDeleteButton.textContent=e?"Deleting...":this._buttonText}},{key:"setEventListeners",value:function(){var e=this;C(I(a.prototype),"setEventListeners",this).call(this),this._confirmDeleteButton.addEventListener("click",(function(t){t.preventDefault(),e._handleFormSubmit(),e.renderLoading(!0)}))}}])&&w(t.prototype,n),a}(c);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.nameSelector,r=t.jobSelector,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=n,this._jobElement=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._nameElement.textContent,userJob:this._jobElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.username,n=e.userjob;this._nameElement.textContent=t,this._jobElement.textContent=n}},{key:"changeAvatar",value:function(e){var t=e.link;this._avatar.src=t}}])&&q(t.prototype,n),e}(),B=document.querySelector(".profile__edit-button"),x=document.querySelector(".popup__form-main_type_edit"),T=document.querySelector(".popup__input_type_name"),U=document.querySelector(".popup__input_type_about"),A=document.querySelector(".profile__name"),D=document.querySelector(".profile__about"),V=document.querySelector(".profile__image"),F=document.querySelector(".profile__image-overlay"),N=document.querySelector(".popup__form-main_avatar"),J=document.querySelector(".profile__add-button"),H=document.querySelector(".popup__form-main_img"),M=(document.querySelector(".image-grid"),document.querySelector(".popup__submit-button"),{formSelector:".popup__form-main",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $=new r(M,x),G=new r(M,H),K=new r(M,N);$.enableValidation(),G.enableValidation(),K.enableValidation();var Q=new t({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"75ee1925-b4bb-487f-88d2-d6f873f1ed28","Content-Type":"application/json"}}),W=new P({nameSelector:A,jobSelector:D,avatar:V});function X(e){var t=new i({data:e,handleCardClick:function(e){var t=e.name,n=e.link;ee.open({name:t,link:n})},handleDeleteClick:function(e){Z.open(),Z.setSubmitAction((function(){Q.removeCard(e._id).then((function(){t.deleteImage(),Z.close()})).catch((function(e){console.log(e)}))}))},handleAddLike:function(e){Q.addLike(e._id).then((function(e){t.updateLikes(e.likes)})).catch((function(e){console.log(e)}))},handleRemoveLike:function(e){Q.removeLike(e._id).then((function(e){t.updateLikes(e.likes)})).catch((function(e){console.log(e)}))},userId:W.userId},"#card-template");return t.generateCard()}Promise.all([Q.getUserInfo(),Q.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];console.log(o),console.log(i),W.setUserInfo({username:o.name,userjob:o.about}),W.changeAvatar({link:o.avatar}),W.userId=o._id;var a=new u({items:i,renderer:function(e){if("e2bd721daeb784ecbaa3545f"===e.owner._id){var t=X(e);a.addItem(t)}}},".image-grid");a.renderItems();var s=new E({popupSelector:".popup_type_add-img",handleFormSubmit:function(e){Q.addCard(e).then((function(e){console.log(e);var t=X(e);a.addNewItem(t),s.close()})).catch((function(e){console.log(e)})).finally((function(){s.renderLoading(!1)}))}});s.setEventListeners(),J.addEventListener("click",(function(){s.open(),G.resetValidation()}))})).catch((function(e){console.log(e)}));var Y=new E({popupSelector:".popup_type_edit",handleFormSubmit:function(e){Q.setUserInfo({name:e.username,about:e.userjob}).then((function(){W.setUserInfo({username:e.username,userjob:e.userjob}),Y.close()})).catch((function(e){console.log(e)})).finally((function(){Y.renderLoading(!1)}))}});Y.setEventListeners(),B.addEventListener("click",(function(){var e=W.getUserInfo();T.value=e.userName,U.value=e.userJob,Y.open(),$.resetValidation()}));var Z=new R({popupSelector:".popup_type_delete"});Z.setEventListeners();var ee=new m(".popup_type_image");ee.setEventListeners();var te=new E({popupSelector:".popup_type_avatar",handleFormSubmit:function(e){Q.setUserAvatar({avatar:e.link}).then((function(){W.changeAvatar(e),te.close()})).catch((function(e){console.log(e)})).finally((function(){te.renderLoading(!1)}))}});te.setEventListeners(),F.addEventListener("click",(function(){te.open(),K.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,